  Auf dieser Folie sehen wir den Algorithmus für die Suche mit einheitlichen Kosten. Beachten Sie, dass die Zielprüfung zur knoten Expansionszeit und nicht zur knoten Erzeugungseit durchgeführt wird, wodurch sichergestellt wird, dass der Algorithmus die optimale Lösung findet. Immer, wenn er einen Knoten aus der Liste der Grenzknoten expandiert, die auf Basis der Pfadkosten organisiert ist, prüft der Algorithmus, ob dieser Knoten ein Zielknoten ist. Wenn dies der Fall ist, gibt er die Lösung zurück. An dann falls fügt er diesen Knoten der untersuchten Menge hinzu und expandiert den Knoten. Dieser Algorithmus führt eine Grafensuche durch, wie man an der Verwendung der untersuchten Menge erkennen kann. Der entsprechende Baumsuch-Algorithmus würde keine untersuchte Menge verwenden. Für jeden der Kindknoten überprüft der Algorithmus, ob dieser bereits expandiert wurde oder in der Menge der Grenzknoten enthalten ist. Wenn nicht, wird dieser Kindknoten in die Front eingefügt, die nach jedem einfügen nach aufsteigenden Pfadkosten sortiert wird, so dass der Knoten mit den niedrigsten Pfadkosten am Anfang der Liste steht. In den letzten beiden Zeilen prüft der Algorithmus, ob es in der Front einen Knoten mit niedrigeren Pfadkosten gibt, der zum gleichen Zustand führt wie der gerade eingefügte Kindknoten. Wenn dieser bereits vorhandene Knoten höhere Pfadkosten hat, wird er aus der Front gelöscht und durch den Kindknoten mit den günstigeren Pfadkosten ersetzt.
