  Während der Suche bauen wir einen sogenannten Suchbaum auf. In der Wurzel des Suchbaumes befindet sich der Ausgangszustand. In jedem Zustand können mehrere mögliche Aktionen ausgeführt werden, die Kinderknoten des Knotens, welcher den Originalzustand repräsentiert, erzeugen. Dies resultiert in einer Repräsentation des Suchvorgangs als ein Baum. Ein Suchknoten enthält den Zustand, den er repräsentiert, zusammen mit Informationen darüber, wie er erreicht wurde. Weiterhin brauchen wir ein Konzept der Knotenexpansion. In einem Knotenenn mit Zustand es müssen wir alle Nachfolger des Knotens generieren, indem wir alle anwendbaren Aktionen im Zustand es anwenden. Wir nehmen also die Zustandsinformation, die im Knoten enthalten ist, wir überprüfen welche Aktionen in diesem Zustand anwendbar sind und für jede anwendbare Aktion generieren wir einen Kinderknoten für jeden der Nachfolger zustände. Sobald die Knotenexpansion an einem Knotenenn angewendet wurde, sagen wir, dass der Knotenenn expandiert wurde. Sie können sich wahrscheinlich vorstellen, dass wir Knoten in verschiedenen Reihenfolgen expandieren können. Daher sprechen wir von Suchstrategien. Eine Suchstrategie ist eine Methode, um zu entscheiden welchen Knoten wir als nächstes expandieren wollen. Eine Suchstrategie nimmt zwei wichtige Listen als Basis für weitere Entscheidungen. Die Menge an Grenzknoten, auch Front, Grenze oder offene Liste genannt, und die untersuchte Menge. Die Menge an Grenzknoten ist die Menge aller Knoten die aktuell Kandidaten für die Expansion sind. Die untersuchte Menge, auch geschlossene Liste genannt, ist die Menge aller Zustände, die bereits besucht wurden. Falls Schleifen oder mehrere Pfade zu einem Knoten im Suchraum existieren, kann es passieren, dass wir während des Suchvorgangs wiederholzustände besuchen, die wir bereits zuvor besucht haben. Wir nennen diese Zustände wiederholte oder auch doppelte Zustände. Beachten Sie, dass wiederholte Zustände Nieteil eine optimalen Lösung sein können.
