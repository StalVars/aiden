  Der Davisputnam-Logenmann-Lofländ-Algoritmus, kurz DPLL, kombiniert Resolution mit den drei Techniken Early-Termination, pure Symbolheuristik und Unit-Klausheuristik. Das Ziel ist es, eine erfüllende Interpretation für eine gegebene Formel F zu finden. Der Algorithmus wird mit der Formel F und einer leeren Interpretation E gestartet. Der erste Schritt ist die Unit-Propagation, die mit der Funktion Unit-Propagate implementiert wird, die auf der nächsten Folie gezeigt wird. Die Unit-Propagate-Funktion prüft, ob er eine Lehre-Klausel enthält. In diesem Fall ist erfüllbar und DPLL bricht ab und gibt einen Konflikt zurück. Wenn keine Lehre-Klausel in F enthalten ist, setzt die Unit-Propagate-Funktion alle Unit-Klauseln auf Warr und entfernt sie aus der Formel F, der DPLL-Algoritmus setzt die Arbeit an der verbleibenden Formel F unter Verwendung der Early-Termination Heuristik fort. Wenn F eine Lehre-Klausel oder eine Klausel enthält, die in der aktuellen Interpretation falsch ist, ist die Formel F unerfüllbar und DPLL bricht ohne ein Modell ab. Dann wendet DPLL die pure Symbol Heuristik an. Wenn F ein reines Literal-L enthält, dann wird die Interpretation von L auf Warr gesetzt. Wenn keine nicht interpretierten Literale von F übrig sind, war DPLL erfolgreich und hat eine erfüllende Interpretation E konstruiert, die zurückgegeben wird. Andersfalls, wenn es noch ein nicht interpretiertes Literal gibt, fährt DPLL mit der Splitting-Regel fort. Ein nicht interpretiertes Literal wird zufällig aus der Formel ausgewählt. Der Algorithmus prüft, ob das Setzen des Literals auf Warr zu einer erfüllenden Interpretation führt. Wenn ja, wird das Literal auf Warr gesetzt, andernfalls wird es auf falsch gesetzt.
