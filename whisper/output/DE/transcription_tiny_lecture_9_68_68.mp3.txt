  Es gibt mehrere Methoden, um Bektreckings schneller und intelligenter zu machen. Wir wollen vier davon kurz besprechen. Eine sehr hilfreiche Methode ist die komponenten Analyse. Bei einer Formel in CNF kann ein Solver die Literale in jeder Klausel analysieren. Oft gibt es Klauseln, die keine gemeinsamen Literale haben. Teilmengen von Klauseln, die keine Literale gemeinsam haben, werden als Komponenten bezeichnet und können unabhängig voneinander gelöst werden. Der Solver kann auf kleineren Teilmengen arbeiten und die Suche wird beschleunigt. Außerdem ermöglicht die komponenten Analyse eine Parallelisierung. Anstatt eine Variable und einen Wahrheitswert zufällig für die Auffteilungsregel auszuwählen, können Variablen und Wahrheitswerte bewertet und aus einer Rangordnung die vielversprechendsten ausgewählt werden. Dabei können verschiedene Heuristiken zum Einsatz kommen. Üblicherweise wird die Variable gewählt, die am häufigsten in den übrigen Klauseln vorkommt. Durch geschickte Indizierung wird nach widerverwendbaren Berechnungen im Berechnungsbaum gesucht. Die Auffteilungsregel kann dazu führen, dass Teilbäume mehrfach berechnet werden. Eine Indexierung kann helfen, einen gespeicherten Teilbaum zu finden und redundante Berechnungen zu vermeiden. In großen Wissensbasen können falsche Annahmen in der Auffteilungsregel zur Berechnung sehr großer Teilbäume führen. Zufällige Neustats helfen dem Algorithmus, den großen Teilbaumberechnungen zu entkommen. Im Gegensatz zu dem, was wir bei der lokalen Suche gesehen haben, behalten zufällige Neustats hier gelernte Klauseln bei. Wir werden das Lernen von Klauseln in einer anderen Vorlesung besprechen. Diese Methoden, insbesondere wenn sie kombiniert werden, ermöglichen ein sehr schnelles Bektrecking. Das macht die PLL-Skalierbar für sehr große Wissensbasen.
