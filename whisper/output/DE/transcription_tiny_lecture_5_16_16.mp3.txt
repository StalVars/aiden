  Die Ausweichstrategie der letzten Folie führt einen zufälligen Zug ein. Die Verwendung von zufälligen Neustats und zufälligen Zügen beim 8-Damentproblem kann den Erfolg des Bergsteiger-Algorithmus bei diesem Problem dramatisch verbessern. Wir haben gesehen, dass der Standard Bergsteiger-Algorithmus eine Erfolgsrate von nur 14% hat. Nehmen wir nun eins geteilt durch 0,14 und wir sehen, dass wir ungefähr 7 Neustats benötigen, um eine Instanz des 8-Damentproblems zu lösen. Der Algorithmus wird wahrscheinlich 6 von 7 mal scheitern. Aber ein Mal wird er sehr wahrscheinlich erfolgreich sein und eine Lösung finden. Mit 7 Neustats kann des Bergsteiger-Algorithmus sehr große Instanz des Problems mit Endamen lösen. Auf einem vergrößerten Schachbrett mit bis zu 3 Millionen Damen findet er mit einer zufälligen Neustatstrategie eine Lösung in unter einer Minute. Wenn man dem Algorithmus erlaubt, bis zu 100 zufällige Züge zu einem Zustand mit identischer Bewertung zu verwenden, kann der Bergsteiger-Algorithmus 94% aller Instanz lösen. Ein durchschnittlicher Durchlauf des Algorithmus benötigt 21 Schritte, bis er eine Lösung findet, oder 64 Schritte, bis er in einem lokalen Minimum endet. Wir sehen, dass erfolgreiche Algorithmen für die lokale Suche kombinieren zufällige Schritte mit einer Strategie, in der sie der Heuristic folgen. Die Algorithmen kombinieren die sogenannte Exploration, bei der sie einfach etwas tun, was sie vorher noch nicht versucht haben und wovon eine Heuristic vielleicht sogar abredt, mit Phasen, in denen sie systematisch der heuristischen Bewertung eines Knotensfolgen und Bereiche im Suchraum besuchen, in denen die heuristischen Werte der Knoten besser werden. Dies ist ein grundlegendes Prinzip, das wir auch in anderen in dieser Vorlesung besprochenen Algorithmen sehen werden.
