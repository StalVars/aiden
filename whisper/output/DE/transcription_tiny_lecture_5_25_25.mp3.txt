  Ein MCTS Algorithmus muss entscheiden, welcher Knoten für das nächste Rollout ausgewählt werden soll. Dieses Entscheidungsproblem gehört zu einer größeren Klasse von Problemen, die als Bandit Probleme bezeichnet werden. Ein Bandit ist ein Spielautomat, in den ein Spielergeld einwirft und dann den Hebel für eine bestimmte Zeit zieht, wodurch der Bandit zu spielen beginnt. Nachdem der Bandit angehalten hat, erscheint eine Konfiguration von Bildern auf dem Bildschirm, die über den Gewinn oder Verlust des Spielers in diesem Spiel entscheidet. Bei einem Banditen mit mehreren Armen muss der Spieler entscheiden, welcher Arm gespielt werden soll. Angenommen, wir haben den rechten Arm gezogen und etwas Geld gewonnen. Also sieht das Ziel des rechten Arms vielversprechend aus und wir sind geneigt, ihn erneut zu ziehen. Nehmen wir an, wir ziehen stattdessen den linken Hebel und gewinnen sogar noch mehr Geld als beim Zien des rechten Hebels. Der linke Hebel sieht jetzt noch vielversprechender aus als der rechte. Wir wissen jedoch nicht, ob das stimmt, weil wir keine Ahnung haben, wie der Bandit automat funktioniert und wie die zugrunde ligende Belohnungsverteilung ist. Welcher Arm sollte in jedem Schritt des Spiels gezogen werden, um den Gewinn zu maximieren? Ein sehr effektiver Algorithmus zur Beantwortung dieser Frage ist UCB1.
