  Betrachten wir nun die Tiefensuche. Da wir festgestellt haben, dass die Breitensuche einen sehr hohen Speicherbedarf hat, sind wir an einer Suchstrategie interessiert, die deutlich weniger Speicher benötigt. Hier kommt die Tiefensuche ins Spiel. In der Tiefensuche expandieren wir immer den zuletzt eingefügten Knoten in der Menge der Grenzknoten. Die Menge der Grenzknoten ist als eine Lieferwarteschlange organisiert. In einer Lieferwarteschlange werden Knoten am Anfang der Warteschlange eingefügt. Wenn ein Knoten keine Kinderknoten hat, kehrt die Suche zum nächsten Tiefstenknoten zurück, der noch nicht untersuchte Nachfolger unter dieser Strategie zurück. Sehen wir uns nun wieder ein Beispiel an. Nehmen wir an, dass sich die Tiefensuche in einem Knotenar befindet. Knotenar hat zwei Nachfolger Knoten B und C, die an den Anfang der Liste der Menge an Grenzknoten einzugefügt werden. Die Suche fährt mit dem Knoten B-Ford. B hat Kinderknoten D und E. Diese beiden Knoten werden wiederum am Anfang der Liste Fords C in die Menge der Grenzknoten eingefügt. Dies zwingt die Suchstrategie dazu, als nächstes D zu expandieren. Von D aus wird H expandiert und so weiter, bis die Tiefensuche einen Zustand ohne Kinderknoten erreicht. Von dort aus fährt sie mit dem Knoten aus der Menge an Grenzknoten fort, der der nächstiefste Knoten mit nicht untersuchten Kindern ist.
