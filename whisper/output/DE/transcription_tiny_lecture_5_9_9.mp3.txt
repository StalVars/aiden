  Es gibt Techniken, die einem lokalen Suchalgoritmus helfen, aus diesen Strukturen zu entkommen. Eine Möglichkeit ist die Implementierung einer sogenannten Tabusuche. Bei dieser Suchstrategie merkt sich der lokale Suchalgoritmus frühere Züge. Er führt eine liste sogenannte verbote Nazustände, die zuvor besucht wurden und die dem Algorithmus helfen, Züge zu vermeiden, die in zuvor erkundete Regionen des Suchraums führen. In einer Version mit kurzzeitgedechnes macht die lokale Suche den letzten Zug nicht rückgängig. Stellen sie sich vor, der Algorithmus sucht ein großes Plateau, in dem die Knoten gleich bewertet sind. Also wählt er vom aktuellen Knoten aus einen beliebigen Nachbarn aus. Die Bewertung der Suche wird nicht besser und nun muss er entscheiden, wohin er von diesem Nachbarn ausgeht. Es könnte passieren, dass der Algorithmus versehentlich beschließt, direkt zu dem Knoten zurückzukehren, von dem er gekommen ist, und in einer Schleife landet, in der er zwischen zwei Knoten hin und her springt. Mit kurzzeitgedechnes investieren wir eine begrenzte Menge anspeicher, um solche Bewegungen zu vermeiden. Außerdem kann die lokale Suche so etwas wie ein zufälliges Suchschritt machen. Wir in jizieren sogenanntes Rauschen und der Algorithmus springt zu einem Knoten in der Nachbarschaft des aktuellen Knotens mit einer Auswahlstrategie, die auf dem Rauschen basiert, zum Beispiel in dem er in jedem Schritt der Suche einen Knoten mit einer schlechteren Bewertung mit einer bestimmten Wahrscheinlichkeit auswählt. Eine weitere wichtige Technik ist ein zufälliger Neustart. Bei der Verwendung von zufälligen Neustart startet der Algorithmus vom Anfangszustand oder einem zufälligen Zustand neu, sobald er entweder in eine Zeitüberschreitung läuft, ein lokales Maximum findet oder wenn eine andere Abbruchbedingung erfüllt ist. Er führt also viele lokale Suche durch und wählt dann die beste Lösung aus, die diese verschiedenen Suchen ergeben haben. Theoretisch führen zufällige Neustart zu einer vollständigen Suchstrategie, da die lokale Suche mit zufälligen Neustart schließlich die optimale Lösung finden wird, wenn sie genügend Ressourcen erhält.
