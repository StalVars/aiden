  Wir kehren zurück zu einem Beispiel aus der Vorlesung zu systematischer Suche. Hier sehen wir Zustände und Aktionen mit Aktionskosten. Ein Algorithmus kann die Kosten der Aktionen verwenden, um die Pfadkosten G für jeden Knoten N zu berechnen, indem er die Aktionskosten des spezifischen Pfades zum Knoten enaert. Die Pfadkosten G stehen für die Kosten für einen spezifischen Pfad vom Ausgangszustand I bis zum Knoten N. Beispielhaft betrachten wir den Zustand S4. Hier setzen sich die Pfadkosten aus den beiden Aktionskosten der Aktion mit Kosten 2 von I nach S1 und der Aktion C mit Kosten 3 von S1 nach S4 zusammen. Genauer gesagt 2 plus 3 ist gleich 5. Neben dem genauen Wert, der den Anfangszustand I mit jedem anderen Zustand verbindet, möchten wir auch die Entfernung von jedem Zustand zum Zielzustand wissen. An dieser Stelle kommt die heuristische Funktion H ins Spiel. Sie schätzt den Abstand von einem Zustand zu einem Zielzustand. Für die heuristische Funktion sehen wir ein Beispiel bei Zustand S4 mit H ist gleich 7 und bei Zustand S5 mit H ist gleich 0. Das heißt, in diesem Beispiel schätzt die Heuristic-Funktion den Abstand zu einem Zielzustand von S4 höher ein als den Abstand von S5. Warum dies der Fall ist, wissen wir nicht, es sei denn, wir kennen die genauen Berechnungen, die die Heuristic durchführt, was in diesem Beispiel nicht der Fall ist. Die Bewertungsfunktion F ist als Kostenschätzung eines Knotens konstruiert. Sie ist eine Kombination der Funktionen G und H, der Wert von F kann verwendet werden, um die Knoten in der Liste der Grenzknoten zu sortieren. Ein Knoten in der Liste der Grenzknoten wird als nächstes expandiert, wenn sein Bewertungswert unter allen Knoten in der Liste am günstigsten ist.
